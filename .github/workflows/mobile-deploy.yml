name: üì± Mobile Deploy
on:
  workflow_dispatch:
    inputs:
      release:
        description: 'major | minor | patch'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
      profile:
        description: 'production | dev'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - production

jobs:
  mobile-deploy:
    name: üì± Mobile Deploy
    runs-on: ubuntu-latest
    steps:
      - name: üîå Checkout
        uses: actions/checkout@v3
      - name: üèó Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'yarn'
      - name: üì± Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      - name: üíæ Restore Turbo
        uses: actions/cache@v3
        with:
          path: node_modules/.cache/turbo
          restore-keys: ${{ runner.os }}-turbo-
          key: |
            ${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}
      - name: üíæ Restore Metro
        uses: actions/cache@v3
        id: metro-cache
        with:
          path: |
            apps/chaban-mobile/metro-cache
            apps/chaban-mobile/.expo
            apps/chaban-mobile/dist
          restore-keys: ${{ runner.os }}-metro-
          key: |
            ${{ runner.os }}-metro-${{ hashFiles('**/yarn.lock') }}
      - name: ‚è≥ Yarn install
        run: yarn
      - name: üöÄ Upgrade packages version
        if: ${{ github.event.inputs.profile == 'production' }}
        run: |
          echo '${{secrets.PLAY_STORE_API_KEY}}' > apps/chaban-mobile/api-key.json
          git config --local user.email "simon@lezo.dev"
          git config --local user.name "simonboisset"
          yarn turboversion lezo-alert ${{github.event.inputs.release}}
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          git commit -a -m "v${PACKAGE_VERSION}"
          git push
      - name: ‚è≥ Yarn install after version upgrade
        run: yarn
      - name: üöÄ EAS Build Production
        if: ${{ github.event.inputs.profile == 'production' }}
        working-directory: apps/chaban-mobile
        run: eas build --profile production --platform all --no-wait --auto-submit --non-interactive
      - name: üöÄ EAS Build Dev
        if: ${{ github.event.inputs.profile != 'production' }}
        working-directory: apps/chaban-mobile
        run: eas build --profile dev --platform all --no-wait --non-interactive
